{"version":3,"sources":["tangojs.min.js","/source/tangojs.js"],"names":["global","factory","define","amd","exports","mod","tangojs","this","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","Enum","mapping","reverseMapping","keys","reduce","revMap","key","freeze","v","setConnector","conn","connector","defineProperty","_get","_x11","_x12","_x13","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","call","getPrototypeOf","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","AttributeInfo","info","_info","inf","CommandInfo","Connector","domain","family","deviceName","attributeName","nameValueTuples","arguments","commandName","arg","sync","Database","dbReadDomains","dbReadFamilies","dbReadMembers","DeviceAttribute","deviceProxy","readAttributeValue","writeAttributeValue","readAttributeInfo","DeviceCommand","readCommandInfo","executeCommand","DeviceInfo","InvalidDeviceNameException","_Error","Error","deviceNamePattern","DeviceProxy","_len","args","Array","_key","member","search","readDeviceStatus","readDeviceInfo","readAttributesList","nv","bulk","writeAttributeValuesBulk","then","r","reset","readCommandsList","TimestampedResponse","timestamp","_timestamp","AttributeReadResponse","_TimestampedResponse","argout","quality","_argout","_quality","CommandOutputResponse","_TimestampedResponse2","DeviceStatusResponse","_TimestampedResponse3","state","status","_state","_status","AttributeDataFormat","FMT_UNKNOWN","IMAGE","SCALAR","SPECTRUM","AttributeDataType","ATT_BOOL","ATT_DOUBLE","ATT_ENCODED","ATT_FLOAT","ATT_LONG","ATT_LONG64","ATT_SHORT","ATT_STATE","ATT_STRING","ATT_UCHAR","ATT_ULONG","ATT_ULONG64","ATT_USHORT","DEVICE_STATE","NO_DATA","AttributeQuality","ATTR_ALARM","ATTR_CHANGING","ATTR_INVALID","ATTR_VALID","ATTR_WARNING","AttributeWriteType","READ","READ_WITH_WRITE","READ_WRITE","WRITE","DeviceState","ALARM","CLOSE","DISABLE","EXTRACT","FAULT","INIT","INSERT","MOVING","OFF","ON","OPEN","RUNNING","STANDBY","UNKNOWN","DisplayLevel","EXPERT","OPERATOR","ErrorSeverity","ERR","PANIC","WARN"],"mappings":"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","file":"tangojs.min.js","sourcesContent":["!function(e,t){if(\"function\"==typeof define&&define.amd)define([\"exports\"],t);else if(\"undefined\"!=typeof exports)t(exports);else{var n={exports:{}};t(n.exports),e.tangojs=n.exports}}(this,function(e){\"use strict\";function t(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(e){var t=Object.keys(e).reduce(function(t,n){return t[e[n]]=n,t},{});return Object.freeze(Object.keys(e).reduce(function(t,n){return t[n]=e[n],t},function(e){return t[e]}))}function r(t){e.connector=I=t}Object.defineProperty(e,\"__esModule\",{value:!0});var u=function(e,t,n){for(var i=!0;i;){var r=e,u=t,o=n;a=c=s=void 0,i=!1,null===r&&(r=Function.prototype);var a=Object.getOwnPropertyDescriptor(r,u);if(void 0!==a){if(\"value\"in a)return a.value;var s=a.get;return void 0===s?void 0:s.call(o)}var c=Object.getPrototypeOf(r);if(null===c)return void 0;e=c,t=u,n=o,i=!0}},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=function(){function e(t){n(this,e),this._info=t,Object.freeze(this),Object.freeze(this._info)}return o(e,[{key:\"data_format\",get:function(){return this._info.data_format}},{key:\"data_type\",get:function(){return this._info.data_type}},{key:\"description\",get:function(){return this._info.description}},{key:\"display_unit\",get:function(){return this._info.display_unit}},{key:\"extensions\",get:function(){return this._info.extensions}},{key:\"format\",get:function(){return this._info.format}},{key:\"label\",get:function(){return this._info.label}},{key:\"level\",get:function(){return this._info.level}},{key:\"max_alarm\",get:function(){return this._info.max_alarm}},{key:\"max_dim_x\",get:function(){return this._info.max_dim_x}},{key:\"max_dim_y\",get:function(){return this._info.max_dim_y}},{key:\"max_value\",get:function(){return this._info.max_value}},{key:\"min_alarm\",get:function(){return this._info.min_alarm}},{key:\"min_value\",get:function(){return this._info.min_value}},{key:\"name\",get:function(){return this._info.name}},{key:\"standard_unit\",get:function(){return this._info.standard_unit}},{key:\"unit\",get:function(){return this._info.unit}},{key:\"writable\",get:function(){return this._info.writable}},{key:\"writable_attr_name\",get:function(){return this.inf.writable_attr_name}}]),e}(),s=function(){function e(t){n(this,e),this._info=t,Object.freeze(this),Object.freeze(this._info)}return o(e,[{key:\"cmd_name\",get:function(){return this._info.cmd_name}},{key:\"cmd_tag\",get:function(){return this._info.cmd_tag}},{key:\"in_type\",get:function(){return this._info.in_type}},{key:\"in_type_desc\",get:function(){return this._info.in_type_desc}},{key:\"level\",get:function(){return this._info.level}},{key:\"out_type\",get:function(){return this._info.out_type}},{key:\"out_type_desc\",get:function(){return this._info.out_type_desc}}]),e}(),c=function(){function e(){n(this,e)}return o(e,[{key:\"dbReadDomains\",value:function(){}},{key:\"dbReadFamilies\",value:function(e){}},{key:\"dbReadMembers\",value:function(e,t){}},{key:\"readDeviceStatus\",value:function(e){}},{key:\"readDeviceInfo\",value:function(e){}},{key:\"readAttributesList\",value:function(e){}},{key:\"readAttributeValue\",value:function(e,t){}},{key:\"writeAttributeValuesBulk\",value:function(e,t){arguments.length<=2||void 0===arguments[2]?!1:arguments[2],arguments.length<=3||void 0===arguments[3]?!1:arguments[3]}},{key:\"readAttributeInfo\",value:function(e,t){}},{key:\"readCommandsList\",value:function(e){}},{key:\"readCommandInfo\",value:function(e,t){}},{key:\"executeCommand\",value:function(e,t,n,i){}}]),e}(),f=function(){function e(){n(this,e)}return o(e,[{key:\"readDomains\",value:function(){return I.dbReadDomains()}},{key:\"readFamilies\",value:function(e){return I.dbReadFamilies(e)}},{key:\"readMembers\",value:function(e,t){return I.dbReadMembers(e,t)}}]),e}(),m=function(){function e(t,i){n(this,e),this.deviceProxy=t,this.attributeName=i}return o(e,[{key:\"readValue\",value:function(){return this.deviceProxy.readAttributeValue(this.attributeName)}},{key:\"writeValue\",value:function(e){var t=arguments.length<=1||void 0===arguments[1]?!1:arguments[1];return this.deviceProxy.writeAttributeValue(this.attributeName,e,t)}},{key:\"readInfo\",value:function(){return this.deviceProxy.readAttributeInfo(this.attributeName)}}]),e}(),d=function(){function e(t,i){n(this,e),this.deviceProxy=t,this.commandName=i}return o(e,[{key:\"readInfo\",value:function(){return this.deviceProxy.readCommandInfo(this.commandName)}},{key:\"execute\",value:function(){var e=arguments.length<=0||void 0===arguments[0]?void 0:arguments[0],t=arguments.length<=1||void 0===arguments[1]?!1:arguments[1];return this.deviceProxy.executeCommand(this.commandName,e,t)}}]),e}(),l=function(){function e(t){n(this,e),this._info=t,Object.freeze(this),Object.freeze(this._info)}return o(e,[{key:\"classname\",get:function(){return this._info.classname}},{key:\"exported\",get:function(){return this._info.exported}},{key:\"hostname\",get:function(){return this._info.hostname}},{key:\"ior\",get:function(){return this._info.ior}},{key:\"is_taco\",get:function(){return this._info.is_taco}},{key:\"last_exported\",get:function(){return this._info.last_exported}},{key:\"last_unexported\",get:function(){return this._info.last_unexported}},{key:\"name\",get:function(){return this._info.name}},{key:\"pid\",get:function(){return this._info.pid}},{key:\"server\",get:function(){return this._info.server}},{key:\"taco_info\",get:function(){return this._info.taco_info}},{key:\"version\",get:function(){return this._info.version}}]),e}(),_=function(e){function i(e){return n(this,i),u(Object.getPrototypeOf(i.prototype),\"constructor\",this).call(this,e+\" is not a valid device name\")}return t(i,e),i}(Error),h=/^\\w+\\/\\w+\\/\\w+$/,y=function(){function e(){n(this,e);for(var t=arguments.length,i=Array(t),r=0;t>r;r++)i[r]=arguments[r];var u=i[0],o=i[1],a=i[2];if(this.deviceName=u&&o&&a?u+\"/\"+o+\"/\"+a:u,!this.deviceName||this.deviceName.search(h)<0)throw new _(this.deviceName)}return o(e,[{key:\"getName\",value:function(){return this.deviceName}},{key:\"readStatus\",value:function(){return I.readDeviceStatus(this.deviceName)}},{key:\"readInfo\",value:function(){return I.readDeviceInfo(this.deviceName)}},{key:\"readAttributesList\",value:function(){return I.readAttributesList(this.deviceName)}},{key:\"createDeviceAttribute\",value:function(e){return new m(this,e)}},{key:\"readAttributeValue\",value:function(e){return I.readAttributeValue(this.deviceName,e)}},{key:\"writeAttributeValue\",value:function(e,t){var n=arguments.length<=2||void 0===arguments[2]?!1:arguments[2],i=[[e,t]],r=this.writeAttributeValuesBulk(i,n,!1);return r.then(function(e){return(e||[void 0])[0]})}},{key:\"writeAttributeValuesBulk\",value:function(e){var t=arguments.length<=1||void 0===arguments[1]?!1:arguments[1],n=arguments.length<=2||void 0===arguments[2]?!1:arguments[2];return I.writeAttributeValuesBulk(this.deviceName,e,t,n)}},{key:\"readAttributeInfo\",value:function(e){return I.readAttributeInfo(this.deviceName,e)}},{key:\"createDeviceCommand\",value:function(e){return new d(this,e)}},{key:\"readCommandsList\",value:function(){return I.readCommandsList(this.deviceName)}},{key:\"readCommandInfo\",value:function(e){return I.readCommandInfo(this.deviceName,e)}},{key:\"executeCommand\",value:function(e){var t=arguments.length<=1||void 0===arguments[1]?void 0:arguments[1],n=arguments.length<=2||void 0===arguments[2]?!1:arguments[2];return I.executeCommand(this.deviceName,e,t,n)}}]),e}(),v=function(){function e(t){n(this,e),this._timestamp=t}return o(e,[{key:\"timestamp\",get:function(){return this._timestamp}}]),e}(),g=function(e){function i(e,t,r){n(this,i),u(Object.getPrototypeOf(i.prototype),\"constructor\",this).call(this,e),this._argout=t,this._quality=r,Object.freeze(this),Object.freeze(this._argout),Object.freeze(this._quality)}return t(i,e),o(i,[{key:\"argout\",get:function(){return this._argout}},{key:\"quality\",get:function(){return this._quality}}]),i}(v),k=function(e){function i(e,t){n(this,i),u(Object.getPrototypeOf(i.prototype),\"constructor\",this).call(this,e),this._argout=t,Object.freeze(this),Object.freeze(this._argout)}return t(i,e),o(i,[{key:\"argout\",get:function(){return this._argout}}]),i}(v),b=function(e){function i(e,t,r){n(this,i),u(Object.getPrototypeOf(i.prototype),\"constructor\",this).call(this,e),this._state=t,this._status=r,Object.freeze(this),Object.freeze(this._state),Object.freeze(this._status)}return t(i,e),o(i,[{key:\"state\",get:function(){return this._state}},{key:\"status\",get:function(){return this._status}}]),i}(v),p=i({FMT_UNKNOWN:3,IMAGE:2,SCALAR:0,SPECTRUM:1}),A=i({ATT_BOOL:0,ATT_DOUBLE:5,ATT_ENCODED:13,ATT_FLOAT:4,ATT_LONG:2,ATT_LONG64:3,ATT_SHORT:1,ATT_STATE:11,ATT_STRING:10,ATT_UCHAR:6,ATT_ULONG:8,ATT_ULONG64:9,ATT_USHORT:7,DEVICE_STATE:12,NO_DATA:14}),T=i({ATTR_ALARM:2,ATTR_CHANGING:3,ATTR_INVALID:1,ATTR_VALID:0,ATTR_WARNING:4}),O=i({READ:0,READ_WITH_WRITE:1,READ_WRITE:3,WRITE:2}),N=i({ALARM:11,CLOSE:2,DISABLE:12,EXTRACT:5,FAULT:8,INIT:9,INSERT:4,MOVING:6,OFF:1,ON:0,OPEN:3,RUNNING:10,STANDBY:7,UNKNOWN:13}),x=i({EXPERT:1,OPERATOR:0}),R=i({ERR:1,PANIC:2,WARN:0}),I=null;e.AttributeInfo=a,e.CommandInfo=s,e.Connector=c,e.Database=f,e.DeviceAttribute=m,e.DeviceCommand=d,e.DeviceInfo=l,e.DeviceProxy=y,e.AttributeReadResponse=g,e.CommandOutputResponse=k,e.DeviceStatusResponse=b,e.AttributeDataFormat=p,e.AttributeDataType=A,e.AttributeQuality=T,e.AttributeWriteType=O,e.DeviceState=N,e.DisplayLevel=x,e.ErrorSeverity=R,e.InvalidDeviceNameException=_,e.connector=I,e.setConnector=r});\n//# sourceMappingURL=tangojs.min.js.map\n","/**\n * Immutable structure that contains information about an attribute.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/TangoApi/AttributeInfo.html\n */\nclass AttributeInfo {\n\n  /**\n   * Creates new AttributeInfo.\n   * @param {Object} info serialized AttributeInfo from TangORB.\n   */\n  constructor(info) {\n    /** @access private */\n    this._info = info\n    Object.freeze(this)\n    Object.freeze(this._info)\n  }\n\n  /** @type {AttributeDataFormat} */\n  get data_format() {\n    return this._info['data_format']\n  }\n\n  /** @type {number} */\n  get data_type() {\n    return this._info['data_type']\n  }\n\n  /** @type {string} */\n  get description() {\n    return this._info['description']\n  }\n\n  /** @type {string} */\n  get display_unit() {\n    return this._info['display_unit']\n  }\n\n  /** @type {string[]} */\n  get extensions() {\n    return this._info['extensions']\n  }\n\n  /** @type {string} */\n  get format() {\n    return this._info['format']\n  }\n\n  /** @type {string} */\n  get label() {\n    return this._info['label']\n  }\n\n  /** @type {DisplayLevel} */\n  get level() {\n    return this._info['level']\n  }\n\n  /** @type {string} */\n  get max_alarm() {\n    return this._info['max_alarm']\n  }\n\n  /** @type {number} */\n  get max_dim_x() {\n    return this._info['max_dim_x']\n  }\n\n  /** @type {number} */\n  get max_dim_y() {\n    return this._info['max_dim_y']\n  }\n\n  /** @type {string} */\n  get max_value() {\n    return this._info['max_value']\n  }\n\n  /** @type {string} */\n  get min_alarm() {\n    return this._info['min_alarm']\n  }\n\n  /** @type {string} */\n  get min_value() {\n    return this._info['min_value']\n  }\n\n  /** @type {string} */\n  get name() {\n    return this._info['name']\n  }\n\n  /** @type {string} */\n  get standard_unit() {\n    return this._info['standard_unit']\n  }\n\n  /** @type {string} */\n  get unit() {\n    return this._info['unit']\n  }\n\n  /** @type {AttributeWriteType} */\n  get writable() {\n    return this._info['writable']\n  }\n\n  /** @type {string} */\n  get writable_attr_name() {\n    return this.inf['writable_attr_name']\n  }\n\n}\n\n\n/**\n * Immutable structure that contains information about a command.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/TangoApi/CommandInfo.html\n */\nclass CommandInfo {\n\n  /**\n   * Creates new CommandInfo.\n   * @param {Object} info serialized CommandInfo from TangORB.\n   */\n  constructor(info) {\n    /** @access private */\n    this._info = info\n    Object.freeze(this)\n    Object.freeze(this._info)\n  }\n\n  /** @type {string} */\n  get cmd_name() {\n    return this._info['cmd_name']\n  }\n\n  /** @type {number} */\n  get cmd_tag() {\n    return this._info['cmd_tag']\n  }\n\n  /** @type {number} */\n  get in_type() {\n    return this._info['in_type']\n  }\n\n  /** @type {string} */\n  get in_type_desc() {\n    return this._info['in_type_desc']\n  }\n\n  /** @type {DisplayLevel} */\n  get level() {\n    return this._info['level']\n  }\n\n  /** @type {number} */\n  get out_type() {\n    return this._info['out_type']\n  }\n\n  /** @type {string} */\n  get out_type_desc() {\n    return this._info['out_type_desc']\n  }\n\n}\n\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Tangojs connector interface. This class contains backend-specific\n * logic. Each connector plugin have to provide implementation\n * of this interface.\n * @interface\n */\nclass Connector {\n\n  /**\n   * Reads list of all domains.\n   * @return {Promise<string[],Error>} result\n   */\n  dbReadDomains() {}\n\n  /**\n   * Reads list of all families in given domain.\n   * @param {string} domain domain name\n   * @return {Promise<string[],Error>} result\n   */\n  dbReadFamilies(domain) {}\n\n  /**\n   * Reads list of all members in given domain and family.\n   * @param {string} domain domain name\n   * @param {string} family family name\n   * @return {Promise<string[],Error>} result\n   */\n  dbReadMembers(domain, family) {}\n\n  /**\n   * Reads device status.\n   * @param {string} deviceName device name\n   * @return {Promise<DeviceStatusResponse,Error>} device status\n   */\n  readDeviceStatus(deviceName) {}\n\n  /**\n   * Reads device info.\n   * @param {string} deviceName device name\n   * @return {Promise<DeviceInfo,Error>} device info\n   */\n  readDeviceInfo(deviceName) {}\n\n  /**\n   * Reads list of attribute names.\n   * @param {string} deviceName device name\n   * @return {Promise<string[],Error>} attribute names\n   */\n  readAttributesList(deviceName) {}\n\n  /**\n   * Reads attribute value.\n   * @param {string}  deviceName     device name\n   * @param {string}  attributeName  attribute name\n   * @return {Promise<AttributeReadResponse,Error>} result\n   */\n  readAttributeValue(deviceName, attributeName) {}\n\n  /**\n   * Writes values into multiple attributes.\n   * Returns promise of stored values (if sync is true)\n   * or null (if sync is false).\n   * @param {string}      deviceName       device name\n   * @param {Object[][]}  nameValueTuples  list of 2-element lists [name, value]\n   * @param {boolean}     [sync=false]     synchronous / asynchronous call\n   * @param {boolean}     [reset=false]    reset not specified attributes\n   * @return {Promise<AttributeReadResponse[],Error>|Promise<undefined,Error>}\n   */\n  writeAttributeValuesBulk(deviceName, nameValueTuples, sync = false, reset = false) {}\n\n  /**\n   * Reads attribute info.\n   * @param {string}  deviceName     device name\n   * @param {string}  attributeName  attribute name\n   * @return {Promise<AttributeInfo,Error>} result\n   */\n  readAttributeInfo(deviceName, attributeName) {}\n\n  /**\n   * Reads list of command names.\n   * @param {string} deviceName device name\n   * @return {Promise<string[],Error>} command names\n   */\n  readCommandsList(deviceName) {}\n\n  /**\n   * Reads command info.\n   * @param {string}  deviceName   device name\n   * @param {string}  commandName  command name\n   * @return {Promise<CommandInfo,Error>} result\n   */\n  readCommandInfo(deviceName, commandName) {}\n\n  /**\n   * Executes command. Pass undefined as argument for 0-arity commands.\n   * Returns execution result (if sync is true) or null (if sync is false).\n   * @param {string}   deviceName   device name\n   * @param {string}   commandName  command name\n   * @param {Object}   arg          input argument\n   * @param {boolean}  [sync=false] synchronous / asynchronous call\n   * @return {Promise<CommandOutputResponse,Error>|Promise<undefined,Error>}\n   */\n  executeCommand(deviceName, commandName, arg, sync) {}\n}\n\n\n/**\n * Gives access to the database.\n */\nclass Database {\n\n  /**\n   * Reads list of all domains.\n   * @return {Promise<string[],Error>} result\n   */\n  readDomains() {\n    return connector.dbReadDomains()\n  }\n\n  /**\n   * Reads list of all families in given domain.\n   * @param {string} domain domain name\n   * @return {Promise<string[],Error>} result\n   */\n  readFamilies(domain) {\n    return connector.dbReadFamilies(domain)\n  }\n\n  /**\n   * Reads list of all members in given domain and family.\n   * @param {string} domain domain name\n   * @param {string} family family name\n   * @return {Promise<string[],Error>} result\n   */\n  readMembers(domain, family) {\n    return connector.dbReadMembers(domain, family)\n  }\n\n  // TODO add support for listing and filtering devices\n}\n\n\n/**\n * Proxy for accessing device attribute.\n */\nclass DeviceAttribute {\n\n  /**\n   * Creates new DeviceAttribute.\n   * @param {DeviceProxy}  deviceProxy    device proxy instance\n   * @param {string}       attributeName  attribute name\n   */\n  constructor(deviceProxy, attributeName) {\n    /** @private */\n    this.deviceProxy = deviceProxy\n    /** @private */\n    this.attributeName = attributeName\n  }\n\n  /**\n   * Reads attribute value.\n   * @return {Promise<AttributeReadResponse,Error>} result\n   */\n  readValue() {\n    return this.deviceProxy.readAttributeValue(this.attributeName)\n  }\n\n  /**\n   * Writes attribute value.\n   * Returns promise of stored value (if sync is true)\n   * or undefined (if sync is false).\n   * @param {Object}   value         value to write\n   * @param {boolean}  [sync=false]  synchronous / asynchronous call\n   * @return {Promise<AttributeReadResponse,Error>|Promise<undefined,Error>}\n   */\n  writeValue(value, sync = false) {\n    return this.deviceProxy\n      .writeAttributeValue(this.attributeName, value, sync)\n  }\n\n  /**\n   * Reads attribute info.\n   * @return {Promise<AttributeInfo,Error>} result\n   */\n  readInfo() {\n    return this.deviceProxy.readAttributeInfo(this.attributeName)\n  }\n}\n\n\n/**\n * Proxy for executing commands on the device.\n */\nclass DeviceCommand {\n\n  /**\n   * Creates new DeviceCommand.\n   * @param {DeviceProxy}  deviceProxy  device proxy instance\n   * @param {string}       commandName  command name\n   */\n  constructor(deviceProxy, commandName) {\n    /** @private */\n    this.deviceProxy = deviceProxy\n    /** @private */\n    this.commandName = commandName\n  }\n\n  /**\n   * Reads command info.\n   * @return {Promise<CommandInfo,Error>} result\n   */\n  readInfo() {\n    return this.deviceProxy.readCommandInfo(this.commandName)\n  }\n\n  /**\n   * Executes command. Pass undefined as argument for 0-arity commands.\n   * Returns execution result (if sync is true) or undefined (if sync is false).\n   * @param {Object}   arg   input argument\n   * @param {boolean}  sync  synchronous / asynchronous call\n   * @return {Promise<CommandOutputResponse,Error>|Promise<undefined,Error>}\n   */\n  execute(arg = undefined, sync = false) {\n    return this.deviceProxy.executeCommand(this.commandName, arg, sync)\n  }\n}\n\n\n/**\n * Immutable structure that contains information about a device.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/TangoApi/DeviceInfo.html\n */\nclass DeviceInfo {\n\n  /**\n   * Creates new DeviceInfo.\n   * @param {Object} info serialized DeviceInfo from TangORB.\n   */\n  constructor(info) {\n    /** @access private */\n    this._info = info\n    Object.freeze(this)\n    Object.freeze(this._info)\n  }\n\n  /** @type {string} */\n  get classname() {\n    return this._info['classname']\n  }\n\n  /** @type {boolean} */\n  get exported() {\n    return this._info['exported']\n  }\n\n  /** @type {string} */\n  get hostname() {\n    return this._info['hostname']\n  }\n\n  /** @type {string} */\n  get ior() {\n    return this._info['ior']\n  }\n\n  /** @type {boolean} */\n  get is_taco() {\n    return this._info['is_taco']\n  }\n\n  /** @type {string} */\n  get last_exported() {\n    return this._info['last_exported']\n  }\n\n  /** @type {string} */\n  get last_unexported() {\n    return this._info['last_unexported']\n  }\n\n  /** @type {string} */\n  get name() {\n    return this._info['name']\n  }\n\n  /** @type {number} */\n  get pid() {\n    return this._info['pid']\n  }\n\n  /** @type {string} */\n  get server() {\n    return this._info['server']\n  }\n\n  /** @type {string} */\n  get taco_info() {\n    return this._info['taco_info']\n  }\n\n  /** @type {string} */\n  get version() {\n    return this._info['version']\n  }\n\n}\n\n\n// why those `returns` are here?\n// https://github.com/jashkenas/coffeescript/issues/2359\n// http://stackoverflow.com/questions/10805084/subclassing-native-objects-instanceof-not-working-properly\n// http://stackoverflow.com/questions/19422145/property-in-subclass-of-error-not-set\n// https://github.com/jashkenas/coffeescript/issues/2111\n\n/**\n * Indicates invalid device name. Thrown by {@link DeviceProxy} constructor.\n */\nclass InvalidDeviceNameException extends Error {\n  /** @param {string} deviceName name of the device */\n  constructor(deviceName) {\n    return super(`${deviceName} is not a valid device name`)\n  }\n}\n\nconst deviceNamePattern = /^\\w+\\/\\w+\\/\\w+$/\n\n/**\n * Device proxy that allows one to access attributes and properties of a device.\n */\nclass DeviceProxy {\n\n  /**\n   * Creates new DeviceProxy.\n   * Takes 1 or 3 arguments.\n   * @param {...string} args device name\n   * @throws {InvalidDeviceNameException} thrown when device name is invalid\n   * @example\n   * let p1 = new tangojs.DeviceProxy('my/dev/1')\n   * let p2 = new tangojs.DeviceProxy('my', 'dev', '1')\n   */\n  constructor(...args) {\n\n    let [domain, family, member] = args\n\n    /** @private */\n    this.deviceName = (domain && family && member)\n      ? `${domain}/${family}/${member}` : domain\n\n    if (! this.deviceName || this.deviceName.search(deviceNamePattern) < 0)\n      throw new InvalidDeviceNameException(this.deviceName)\n  }\n\n  /**\n   * Returns device name.\n   * @return {string} device name\n   */\n  getName() {\n    return this.deviceName\n  }\n\n  /**\n   * Reads device status.\n   * @return {Promise<DeviceStatusResponse,Error>} device status\n   */\n  readStatus() {\n    return connector.readDeviceStatus(this.deviceName)\n  }\n\n  /**\n   * Reads device info.\n   * @return {Promise<DeviceInfo,Error>} device info\n   */\n  readInfo() {\n    return connector.readDeviceInfo(this.deviceName)\n  }\n\n  /**\n   * Reads list of attribute names.\n   * @return {Promise<string[],Error>} attribute names\n   */\n  readAttributesList() {\n    return connector.readAttributesList(this.deviceName)\n  }\n\n  /**\n   * Factory method for {@link DeviceAttribute} instances.\n   * @param {string} attributeName attribute name\n   * @return {DeviceAttribute} attribute proxy\n   */\n  createDeviceAttribute(attributeName) {\n    return new DeviceAttribute(this, attributeName)\n  }\n\n  /**\n   * Reads attribute value.\n   * @param {string} attributeName attribute name\n   * @return {Promise<AttributeReadResponse,Error>} result\n   */\n  readAttributeValue(attributeName) {\n    return connector.readAttributeValue(this.deviceName, attributeName)\n  }\n\n  /**\n   * Writes attribute value.\n   * Returns promise of stored value (if sync is true)\n   * or undefined (if sync is false).\n   * @param {string}   attributeName  attribute name\n   * @param {Object}   value          value to write\n   * @param {boolean}  [sync=false]   synchronous / asynchronous call\n   * return {Promise<AttributeReadResponse,Error>|Promise<undefined|Error}\n   */\n  writeAttributeValue(attributeName, value, sync = false) {\n    let nv = [[attributeName, value]]\n    let bulk = this.writeAttributeValuesBulk(nv, sync, false)\n    return bulk.then( r => (r || [undefined])[0] )\n  }\n\n  /**\n   * Writes values into multiple attributes.\n   * Returns promise of stored values (if sync is true)\n   * or undefined (if sync is false).\n   * @param {Object[][]}  nameValueTuples  list of 2-element lists [name, value]\n   * @param {boolean}     [sync=false]     synchronous / asynchronous call\n   * @param {boolean}     [reset=false]    reset not specified attributes\n   * @return {Promise<AttributeReadResponse[],Error>|Promise<undefined|Error>}\n   */\n  writeAttributeValuesBulk(nameValueTuples, sync = false, reset = false) {\n    return connector.writeAttributeValuesBulk(this.deviceName,\n      nameValueTuples, sync, reset)\n  }\n\n  /**\n   * Reads attribute info.\n   * @param {string} attributeName attribute name\n   * @return {Promise<AttributeInfo,Error>} result\n   */\n  readAttributeInfo(attributeName) {\n    return connector.readAttributeInfo(this.deviceName, attributeName)\n  }\n\n  /**\n   * Factory method for {@link DeviceCommand} instances.\n   * @param {string} commandName command name\n   * @return {DeviceCommand} command proxy\n   */\n  createDeviceCommand(commandName) {\n    return new DeviceCommand(this, commandName)\n  }\n\n  /**\n   * Reads list of command names.\n   * @return {Promise<string[],Error>} command names\n   */\n  readCommandsList() {\n    return connector.readCommandsList(this.deviceName)\n  }\n\n  /**\n   * Reads command info.\n   * @param {string} commandName command name\n   * @return {Promise<CommandInfo,Error>} result\n   */\n  readCommandInfo(commandName) {\n    return connector.readCommandInfo(this.deviceName, commandName)\n  }\n\n  /**\n   * Executes command. Pass undefined as argument for 0-arity commands.\n   * Returns execution result (if sync is true) or undefined (if sync is false).\n   * @param {string}   commandName      command name\n   * @param {Object}   [arg=undefined]  input argument\n   * @param {boolean}  [sync=false]     synchronous / asynchronous call\n   * @return {Promise<CommandOutputResponse,Error>|Promise<undefined|Error>\n   */\n  executeCommand(commandName, arg = undefined, sync = false) {\n    return connector.executeCommand(this.deviceName, commandName, arg, sync)\n  }\n\n  // TODO add support for events\n\n  // TODO add support for properties\n}\n\n\n/** Base class for responses. */\nclass TimestampedResponse {\n\n  /**\n   * @param {number} timestamp time when this value was created\n   */\n  constructor(timestamp) {\n    /** @private */\n    this._timestamp = timestamp\n  }\n\n  /** @type {number} */\n  get timestamp() {\n    return this._timestamp\n  }\n}\n\n\n/** Represents result of reading an attribute. */\nclass AttributeReadResponse extends TimestampedResponse {\n\n  /**\n   * @param {number} timestamp\n   * @param {Object} argout\n   * @param {AttributeQuality} quality\n   */\n  constructor(timestamp, argout, quality) {\n    super(timestamp)\n    /** @private */\n    this._argout = argout\n    /** @private */\n    this._quality = quality\n    Object.freeze(this)\n    Object.freeze(this._argout)\n    Object.freeze(this._quality)\n  }\n\n  /** @type {Object} */\n  get argout() {\n    return this._argout\n  }\n\n  /** @type {AttributeQuality} */\n  get quality() {\n    return this._quality\n  }\n}\n\n\n/** Represents result of executing a command. */\nclass CommandOutputResponse extends TimestampedResponse {\n\n  /**\n   * @param {number} timestamp\n   * @param {Object} argout\n   */\n  constructor(timestamp, argout) {\n    super(timestamp)\n    /** @private */\n    this._argout = argout\n    Object.freeze(this)\n    Object.freeze(this._argout)\n  }\n\n  /** @type {Object} */\n  get argout() {\n    return this._argout\n  }\n\n}\n\n\n/** Status and state of a device. */\nclass DeviceStatusResponse extends TimestampedResponse {\n\n  /**\n   * @param {number} timestamp\n   * @param {DeviceState} state\n   * @param {string} status\n   */\n  constructor(timestamp, state, status) {\n    super(timestamp)\n    /** @private */\n    this._state = state\n    /** @private */\n    this._status = status\n    Object.freeze(this)\n    Object.freeze(this._state)\n    Object.freeze(this._status)\n  }\n\n  /** @type {DeviceState} */\n  get state() {\n    return this._state\n  }\n\n  /** @type {string} **/\n  get status() {\n    return this._status\n  }\n\n}\n\n\n/**\n * Enum factory. Enum is a function that maps value to the corresponding key\n * and has all key-value mappings attached.\n * @private\n * @param {Object} mapping from strings to unique identifiers\n * @return {Object} enum\n */\nfunction Enum(mapping) {\n\n  let reverseMapping = Object.keys(mapping).reduce(\n    (revMap, key) => (revMap[mapping[key]] = key, revMap),\n    {}\n  )\n\n  return Object.freeze(\n    Object.keys(mapping).reduce(\n      (revMap, key) => (revMap[key] = mapping[key], revMap),\n      v => reverseMapping[v]\n    )\n  )\n}\n\n\n/**\n * Attribute data format.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/AttrDataFormat.html\n */\nconst AttributeDataFormat = Enum({\n  FMT_UNKNOWN:  3,\n  IMAGE:        2,\n  SCALAR:       0,\n  SPECTRUM:     1\n})\n\n\n/**\n * Attribute data type.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/AttributeDataType.html\n */\nconst AttributeDataType = Enum({\n  ATT_BOOL:     0,\n  ATT_DOUBLE:   5,\n  ATT_ENCODED:  13,\n  ATT_FLOAT:    4,\n  ATT_LONG:     2,\n  ATT_LONG64:   3,\n  ATT_SHORT:    1,\n  ATT_STATE:    11,\n  ATT_STRING:   10,\n  ATT_UCHAR:    6,\n  ATT_ULONG:    8,\n  ATT_ULONG64:  9,\n  ATT_USHORT:   7,\n  DEVICE_STATE: 12,\n  NO_DATA:      14\n})\n\n\n/**\n * Attribute quality.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/AttrQuality.html\n */\nconst AttributeQuality = Enum({\n  ATTR_ALARM:    2,\n  ATTR_CHANGING: 3,\n  ATTR_INVALID:  1,\n  ATTR_VALID:    0,\n  ATTR_WARNING:  4\n})\n\n\n/**\n * Attribute write type.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/AttrWriteType.html\n */\nconst AttributeWriteType = Enum({\n  READ:             0,\n  READ_WITH_WRITE:  1,\n  READ_WRITE:       3,\n  WRITE:            2\n})\n\n\n/**\n * Device state.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/DevState.html\n */\nconst DeviceState = Enum({\n  ALARM:    11,\n  CLOSE:    2,\n  DISABLE:  12,\n  EXTRACT:  5,\n  FAULT:    8,\n  INIT:     9,\n  INSERT:   4,\n  MOVING:   6,\n  OFF:      1,\n  ON:       0,\n  OPEN:     3,\n  RUNNING:  10,\n  STANDBY:  7,\n  UNKNOWN:  13\n})\n\n\n/**\n * Display level.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/DispLevel.html\n */\nconst DisplayLevel = Enum({\n  EXPERT:   1,\n  OPERATOR: 0\n})\n\n\n/**\n * Error severity.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/ErrSeverity.html\n */\nconst ErrorSeverity = Enum({\n  ERR:   1,\n  PANIC: 2,\n  WARN:  0\n})\n\n\n/**\n * Backend-specific connector implementation.\n * @private\n */\nlet connector = null\n\n/**\n * Sets connector interface implementation.\n * @param {Connector} conn connector implementation\n */\nfunction setConnector(conn) {\n  connector = conn\n}\n\nexport { AttributeInfo };\nexport { CommandInfo };\nexport { Connector };\nexport { Database };\nexport { DeviceAttribute };\nexport { DeviceCommand };\nexport { DeviceInfo };\nexport { DeviceProxy };\nexport { AttributeReadResponse };\nexport { CommandOutputResponse };\nexport { DeviceStatusResponse };\nexport { AttributeDataFormat };\nexport { AttributeDataType };\nexport { AttributeQuality };\nexport { AttributeWriteType };\nexport { DeviceState };\nexport { DisplayLevel };\nexport { ErrorSeverity };\nexport { InvalidDeviceNameException };\nexport { connector };\nexport { setConnector };"],"sourceRoot":"/source/"}