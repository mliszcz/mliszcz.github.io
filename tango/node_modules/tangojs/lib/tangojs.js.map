{"version":3,"sources":["tangojs.js"],"names":[],"mappings":"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","file":"tangojs.js","sourcesContent":["/**\n * Immutable structure that contains information about an attribute.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/TangoApi/AttributeInfo.html\n */\nclass AttributeInfo {\n\n  /**\n   * Creates new AttributeInfo.\n   * @param {Object} info serialized AttributeInfo from TangORB.\n   */\n  constructor(info) {\n    /** @access private */\n    this._info = info\n    Object.freeze(this)\n    Object.freeze(this._info)\n  }\n\n  /** @type {AttributeDataFormat} */\n  get data_format() {\n    return this._info['data_format']\n  }\n\n  /** @type {number} */\n  get data_type() {\n    return this._info['data_type']\n  }\n\n  /** @type {string} */\n  get description() {\n    return this._info['description']\n  }\n\n  /** @type {string} */\n  get display_unit() {\n    return this._info['display_unit']\n  }\n\n  /** @type {string[]} */\n  get extensions() {\n    return this._info['extensions']\n  }\n\n  /** @type {string} */\n  get format() {\n    return this._info['format']\n  }\n\n  /** @type {string} */\n  get label() {\n    return this._info['label']\n  }\n\n  /** @type {DisplayLevel} */\n  get level() {\n    return this._info['level']\n  }\n\n  /** @type {string} */\n  get max_alarm() {\n    return this._info['max_alarm']\n  }\n\n  /** @type {number} */\n  get max_dim_x() {\n    return this._info['max_dim_x']\n  }\n\n  /** @type {number} */\n  get max_dim_y() {\n    return this._info['max_dim_y']\n  }\n\n  /** @type {string} */\n  get max_value() {\n    return this._info['max_value']\n  }\n\n  /** @type {string} */\n  get min_alarm() {\n    return this._info['min_alarm']\n  }\n\n  /** @type {string} */\n  get min_value() {\n    return this._info['min_value']\n  }\n\n  /** @type {string} */\n  get name() {\n    return this._info['name']\n  }\n\n  /** @type {string} */\n  get standard_unit() {\n    return this._info['standard_unit']\n  }\n\n  /** @type {string} */\n  get unit() {\n    return this._info['unit']\n  }\n\n  /** @type {AttributeWriteType} */\n  get writable() {\n    return this._info['writable']\n  }\n\n  /** @type {string} */\n  get writable_attr_name() {\n    return this.inf['writable_attr_name']\n  }\n\n}\n\n\n/**\n * Immutable structure that contains information about a command.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/TangoApi/CommandInfo.html\n */\nclass CommandInfo {\n\n  /**\n   * Creates new CommandInfo.\n   * @param {Object} info serialized CommandInfo from TangORB.\n   */\n  constructor(info) {\n    /** @access private */\n    this._info = info\n    Object.freeze(this)\n    Object.freeze(this._info)\n  }\n\n  /** @type {string} */\n  get cmd_name() {\n    return this._info['cmd_name']\n  }\n\n  /** @type {number} */\n  get cmd_tag() {\n    return this._info['cmd_tag']\n  }\n\n  /** @type {number} */\n  get in_type() {\n    return this._info['in_type']\n  }\n\n  /** @type {string} */\n  get in_type_desc() {\n    return this._info['in_type_desc']\n  }\n\n  /** @type {DisplayLevel} */\n  get level() {\n    return this._info['level']\n  }\n\n  /** @type {number} */\n  get out_type() {\n    return this._info['out_type']\n  }\n\n  /** @type {string} */\n  get out_type_desc() {\n    return this._info['out_type_desc']\n  }\n\n}\n\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Tangojs connector interface. This class contains backend-specific\n * logic. Each connector plugin have to provide implementation\n * of this interface.\n * @interface\n */\nclass Connector {\n\n  /**\n   * Reads list of all domains.\n   * @return {Promise<string[],Error>} result\n   */\n  dbReadDomains() {}\n\n  /**\n   * Reads list of all families in given domain.\n   * @param {string} domain domain name\n   * @return {Promise<string[],Error>} result\n   */\n  dbReadFamilies(domain) {}\n\n  /**\n   * Reads list of all members in given domain and family.\n   * @param {string} domain domain name\n   * @param {string} family family name\n   * @return {Promise<string[],Error>} result\n   */\n  dbReadMembers(domain, family) {}\n\n  /**\n   * Reads device status.\n   * @param {string} deviceName device name\n   * @return {Promise<DeviceStatusResponse,Error>} device status\n   */\n  readDeviceStatus(deviceName) {}\n\n  /**\n   * Reads device info.\n   * @param {string} deviceName device name\n   * @return {Promise<DeviceInfo,Error>} device info\n   */\n  readDeviceInfo(deviceName) {}\n\n  /**\n   * Reads list of attribute names.\n   * @param {string} deviceName device name\n   * @return {Promise<string[],Error>} attribute names\n   */\n  readAttributesList(deviceName) {}\n\n  /**\n   * Reads attribute value.\n   * @param {string}  deviceName     device name\n   * @param {string}  attributeName  attribute name\n   * @return {Promise<AttributeReadResponse,Error>} result\n   */\n  readAttributeValue(deviceName, attributeName) {}\n\n  /**\n   * Writes values into multiple attributes.\n   * Returns promise of stored values (if sync is true)\n   * or null (if sync is false).\n   * @param {string}      deviceName       device name\n   * @param {Object[][]}  nameValueTuples  list of 2-element lists [name, value]\n   * @param {boolean}     [sync=false]     synchronous / asynchronous call\n   * @param {boolean}     [reset=false]    reset not specified attributes\n   * @return {Promise<AttributeReadResponse[],Error>|Promise<undefined,Error>}\n   */\n  writeAttributeValuesBulk(deviceName, nameValueTuples, sync = false, reset = false) {}\n\n  /**\n   * Reads attribute info.\n   * @param {string}  deviceName     device name\n   * @param {string}  attributeName  attribute name\n   * @return {Promise<AttributeInfo,Error>} result\n   */\n  readAttributeInfo(deviceName, attributeName) {}\n\n  /**\n   * Reads list of command names.\n   * @param {string} deviceName device name\n   * @return {Promise<string[],Error>} command names\n   */\n  readCommandsList(deviceName) {}\n\n  /**\n   * Reads command info.\n   * @param {string}  deviceName   device name\n   * @param {string}  commandName  command name\n   * @return {Promise<CommandInfo,Error>} result\n   */\n  readCommandInfo(deviceName, commandName) {}\n\n  /**\n   * Executes command. Pass undefined as argument for 0-arity commands.\n   * Returns execution result (if sync is true) or null (if sync is false).\n   * @param {string}   deviceName   device name\n   * @param {string}   commandName  command name\n   * @param {Object}   arg          input argument\n   * @param {boolean}  [sync=false] synchronous / asynchronous call\n   * @return {Promise<CommandOutputResponse,Error>|Promise<undefined,Error>}\n   */\n  executeCommand(deviceName, commandName, arg, sync) {}\n}\n\n\n/**\n * Gives access to the database.\n */\nclass Database {\n\n  /**\n   * Reads list of all domains.\n   * @return {Promise<string[],Error>} result\n   */\n  readDomains() {\n    return connector.dbReadDomains()\n  }\n\n  /**\n   * Reads list of all families in given domain.\n   * @param {string} domain domain name\n   * @return {Promise<string[],Error>} result\n   */\n  readFamilies(domain) {\n    return connector.dbReadFamilies(domain)\n  }\n\n  /**\n   * Reads list of all members in given domain and family.\n   * @param {string} domain domain name\n   * @param {string} family family name\n   * @return {Promise<string[],Error>} result\n   */\n  readMembers(domain, family) {\n    return connector.dbReadMembers(domain, family)\n  }\n\n  // TODO add support for listing and filtering devices\n}\n\n\n/**\n * Proxy for accessing device attribute.\n */\nclass DeviceAttribute {\n\n  /**\n   * Creates new DeviceAttribute.\n   * @param {DeviceProxy}  deviceProxy    device proxy instance\n   * @param {string}       attributeName  attribute name\n   */\n  constructor(deviceProxy, attributeName) {\n    /** @private */\n    this.deviceProxy = deviceProxy\n    /** @private */\n    this.attributeName = attributeName\n  }\n\n  /**\n   * Reads attribute value.\n   * @return {Promise<AttributeReadResponse,Error>} result\n   */\n  readValue() {\n    return this.deviceProxy.readAttributeValue(this.attributeName)\n  }\n\n  /**\n   * Writes attribute value.\n   * Returns promise of stored value (if sync is true)\n   * or undefined (if sync is false).\n   * @param {Object}   value         value to write\n   * @param {boolean}  [sync=false]  synchronous / asynchronous call\n   * @return {Promise<AttributeReadResponse,Error>|Promise<undefined,Error>}\n   */\n  writeValue(value, sync = false) {\n    return this.deviceProxy\n      .writeAttributeValue(this.attributeName, value, sync)\n  }\n\n  /**\n   * Reads attribute info.\n   * @return {Promise<AttributeInfo,Error>} result\n   */\n  readInfo() {\n    return this.deviceProxy.readAttributeInfo(this.attributeName)\n  }\n}\n\n\n/**\n * Proxy for executing commands on the device.\n */\nclass DeviceCommand {\n\n  /**\n   * Creates new DeviceCommand.\n   * @param {DeviceProxy}  deviceProxy  device proxy instance\n   * @param {string}       commandName  command name\n   */\n  constructor(deviceProxy, commandName) {\n    /** @private */\n    this.deviceProxy = deviceProxy\n    /** @private */\n    this.commandName = commandName\n  }\n\n  /**\n   * Reads command info.\n   * @return {Promise<CommandInfo,Error>} result\n   */\n  readInfo() {\n    return this.deviceProxy.readCommandInfo(this.commandName)\n  }\n\n  /**\n   * Executes command. Pass undefined as argument for 0-arity commands.\n   * Returns execution result (if sync is true) or undefined (if sync is false).\n   * @param {Object}   arg   input argument\n   * @param {boolean}  sync  synchronous / asynchronous call\n   * @return {Promise<CommandOutputResponse,Error>|Promise<undefined,Error>}\n   */\n  execute(arg = undefined, sync = false) {\n    return this.deviceProxy.executeCommand(this.commandName, arg, sync)\n  }\n}\n\n\n/**\n * Immutable structure that contains information about a device.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/TangoApi/DeviceInfo.html\n */\nclass DeviceInfo {\n\n  /**\n   * Creates new DeviceInfo.\n   * @param {Object} info serialized DeviceInfo from TangORB.\n   */\n  constructor(info) {\n    /** @access private */\n    this._info = info\n    Object.freeze(this)\n    Object.freeze(this._info)\n  }\n\n  /** @type {string} */\n  get classname() {\n    return this._info['classname']\n  }\n\n  /** @type {boolean} */\n  get exported() {\n    return this._info['exported']\n  }\n\n  /** @type {string} */\n  get hostname() {\n    return this._info['hostname']\n  }\n\n  /** @type {string} */\n  get ior() {\n    return this._info['ior']\n  }\n\n  /** @type {boolean} */\n  get is_taco() {\n    return this._info['is_taco']\n  }\n\n  /** @type {string} */\n  get last_exported() {\n    return this._info['last_exported']\n  }\n\n  /** @type {string} */\n  get last_unexported() {\n    return this._info['last_unexported']\n  }\n\n  /** @type {string} */\n  get name() {\n    return this._info['name']\n  }\n\n  /** @type {number} */\n  get pid() {\n    return this._info['pid']\n  }\n\n  /** @type {string} */\n  get server() {\n    return this._info['server']\n  }\n\n  /** @type {string} */\n  get taco_info() {\n    return this._info['taco_info']\n  }\n\n  /** @type {string} */\n  get version() {\n    return this._info['version']\n  }\n\n}\n\n\n// why those `returns` are here?\n// https://github.com/jashkenas/coffeescript/issues/2359\n// http://stackoverflow.com/questions/10805084/subclassing-native-objects-instanceof-not-working-properly\n// http://stackoverflow.com/questions/19422145/property-in-subclass-of-error-not-set\n// https://github.com/jashkenas/coffeescript/issues/2111\n\n/**\n * Indicates invalid device name. Thrown by {@link DeviceProxy} constructor.\n */\nclass InvalidDeviceNameException extends Error {\n  /** @param {string} deviceName name of the device */\n  constructor(deviceName) {\n    return super(`${deviceName} is not a valid device name`)\n  }\n}\n\nconst deviceNamePattern = /^\\w+\\/\\w+\\/\\w+$/\n\n/**\n * Device proxy that allows one to access attributes and properties of a device.\n */\nclass DeviceProxy {\n\n  /**\n   * Creates new DeviceProxy.\n   * Takes 1 or 3 arguments.\n   * @param {...string} args device name\n   * @throws {InvalidDeviceNameException} thrown when device name is invalid\n   * @example\n   * let p1 = new tangojs.DeviceProxy('my/dev/1')\n   * let p2 = new tangojs.DeviceProxy('my', 'dev', '1')\n   */\n  constructor(...args) {\n\n    let [domain, family, member] = args\n\n    /** @private */\n    this.deviceName = (domain && family && member)\n      ? `${domain}/${family}/${member}` : domain\n\n    if (! this.deviceName || this.deviceName.search(deviceNamePattern) < 0)\n      throw new InvalidDeviceNameException(this.deviceName)\n  }\n\n  /**\n   * Returns device name.\n   * @return {string} device name\n   */\n  getName() {\n    return this.deviceName\n  }\n\n  /**\n   * Reads device status.\n   * @return {Promise<DeviceStatusResponse,Error>} device status\n   */\n  readStatus() {\n    return connector.readDeviceStatus(this.deviceName)\n  }\n\n  /**\n   * Reads device info.\n   * @return {Promise<DeviceInfo,Error>} device info\n   */\n  readInfo() {\n    return connector.readDeviceInfo(this.deviceName)\n  }\n\n  /**\n   * Reads list of attribute names.\n   * @return {Promise<string[],Error>} attribute names\n   */\n  readAttributesList() {\n    return connector.readAttributesList(this.deviceName)\n  }\n\n  /**\n   * Factory method for {@link DeviceAttribute} instances.\n   * @param {string} attributeName attribute name\n   * @return {DeviceAttribute} attribute proxy\n   */\n  createDeviceAttribute(attributeName) {\n    return new DeviceAttribute(this, attributeName)\n  }\n\n  /**\n   * Reads attribute value.\n   * @param {string} attributeName attribute name\n   * @return {Promise<AttributeReadResponse,Error>} result\n   */\n  readAttributeValue(attributeName) {\n    return connector.readAttributeValue(this.deviceName, attributeName)\n  }\n\n  /**\n   * Writes attribute value.\n   * Returns promise of stored value (if sync is true)\n   * or undefined (if sync is false).\n   * @param {string}   attributeName  attribute name\n   * @param {Object}   value          value to write\n   * @param {boolean}  [sync=false]   synchronous / asynchronous call\n   * return {Promise<AttributeReadResponse,Error>|Promise<undefined|Error}\n   */\n  writeAttributeValue(attributeName, value, sync = false) {\n    let nv = [[attributeName, value]]\n    let bulk = this.writeAttributeValuesBulk(nv, sync, false)\n    return bulk.then( r => (r || [undefined])[0] )\n  }\n\n  /**\n   * Writes values into multiple attributes.\n   * Returns promise of stored values (if sync is true)\n   * or undefined (if sync is false).\n   * @param {Object[][]}  nameValueTuples  list of 2-element lists [name, value]\n   * @param {boolean}     [sync=false]     synchronous / asynchronous call\n   * @param {boolean}     [reset=false]    reset not specified attributes\n   * @return {Promise<AttributeReadResponse[],Error>|Promise<undefined|Error>}\n   */\n  writeAttributeValuesBulk(nameValueTuples, sync = false, reset = false) {\n    return connector.writeAttributeValuesBulk(this.deviceName,\n      nameValueTuples, sync, reset)\n  }\n\n  /**\n   * Reads attribute info.\n   * @param {string} attributeName attribute name\n   * @return {Promise<AttributeInfo,Error>} result\n   */\n  readAttributeInfo(attributeName) {\n    return connector.readAttributeInfo(this.deviceName, attributeName)\n  }\n\n  /**\n   * Factory method for {@link DeviceCommand} instances.\n   * @param {string} commandName command name\n   * @return {DeviceCommand} command proxy\n   */\n  createDeviceCommand(commandName) {\n    return new DeviceCommand(this, commandName)\n  }\n\n  /**\n   * Reads list of command names.\n   * @return {Promise<string[],Error>} command names\n   */\n  readCommandsList() {\n    return connector.readCommandsList(this.deviceName)\n  }\n\n  /**\n   * Reads command info.\n   * @param {string} commandName command name\n   * @return {Promise<CommandInfo,Error>} result\n   */\n  readCommandInfo(commandName) {\n    return connector.readCommandInfo(this.deviceName, commandName)\n  }\n\n  /**\n   * Executes command. Pass undefined as argument for 0-arity commands.\n   * Returns execution result (if sync is true) or undefined (if sync is false).\n   * @param {string}   commandName      command name\n   * @param {Object}   [arg=undefined]  input argument\n   * @param {boolean}  [sync=false]     synchronous / asynchronous call\n   * @return {Promise<CommandOutputResponse,Error>|Promise<undefined|Error>\n   */\n  executeCommand(commandName, arg = undefined, sync = false) {\n    return connector.executeCommand(this.deviceName, commandName, arg, sync)\n  }\n\n  // TODO add support for events\n\n  // TODO add support for properties\n}\n\n\n/** Base class for responses. */\nclass TimestampedResponse {\n\n  /**\n   * @param {number} timestamp time when this value was created\n   */\n  constructor(timestamp) {\n    /** @private */\n    this._timestamp = timestamp\n  }\n\n  /** @type {number} */\n  get timestamp() {\n    return this._timestamp\n  }\n}\n\n\n/** Represents result of reading an attribute. */\nclass AttributeReadResponse extends TimestampedResponse {\n\n  /**\n   * @param {number} timestamp\n   * @param {Object} argout\n   * @param {AttributeQuality} quality\n   */\n  constructor(timestamp, argout, quality) {\n    super(timestamp)\n    /** @private */\n    this._argout = argout\n    /** @private */\n    this._quality = quality\n    Object.freeze(this)\n    Object.freeze(this._argout)\n    Object.freeze(this._quality)\n  }\n\n  /** @type {Object} */\n  get argout() {\n    return this._argout\n  }\n\n  /** @type {AttributeQuality} */\n  get quality() {\n    return this._quality\n  }\n}\n\n\n/** Represents result of executing a command. */\nclass CommandOutputResponse extends TimestampedResponse {\n\n  /**\n   * @param {number} timestamp\n   * @param {Object} argout\n   */\n  constructor(timestamp, argout) {\n    super(timestamp)\n    /** @private */\n    this._argout = argout\n    Object.freeze(this)\n    Object.freeze(this._argout)\n  }\n\n  /** @type {Object} */\n  get argout() {\n    return this._argout\n  }\n\n}\n\n\n/** Status and state of a device. */\nclass DeviceStatusResponse extends TimestampedResponse {\n\n  /**\n   * @param {number} timestamp\n   * @param {DeviceState} state\n   * @param {string} status\n   */\n  constructor(timestamp, state, status) {\n    super(timestamp)\n    /** @private */\n    this._state = state\n    /** @private */\n    this._status = status\n    Object.freeze(this)\n    Object.freeze(this._state)\n    Object.freeze(this._status)\n  }\n\n  /** @type {DeviceState} */\n  get state() {\n    return this._state\n  }\n\n  /** @type {string} **/\n  get status() {\n    return this._status\n  }\n\n}\n\n\n/**\n * Enum factory. Enum is a function that maps value to the corresponding key\n * and has all key-value mappings attached.\n * @private\n * @param {Object} mapping from strings to unique identifiers\n * @return {Object} enum\n */\nfunction Enum(mapping) {\n\n  let reverseMapping = Object.keys(mapping).reduce(\n    (revMap, key) => (revMap[mapping[key]] = key, revMap),\n    {}\n  )\n\n  return Object.freeze(\n    Object.keys(mapping).reduce(\n      (revMap, key) => (revMap[key] = mapping[key], revMap),\n      v => reverseMapping[v]\n    )\n  )\n}\n\n\n/**\n * Attribute data format.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/AttrDataFormat.html\n */\nconst AttributeDataFormat = Enum({\n  FMT_UNKNOWN:  3,\n  IMAGE:        2,\n  SCALAR:       0,\n  SPECTRUM:     1\n})\n\n\n/**\n * Attribute data type.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/AttributeDataType.html\n */\nconst AttributeDataType = Enum({\n  ATT_BOOL:     0,\n  ATT_DOUBLE:   5,\n  ATT_ENCODED:  13,\n  ATT_FLOAT:    4,\n  ATT_LONG:     2,\n  ATT_LONG64:   3,\n  ATT_SHORT:    1,\n  ATT_STATE:    11,\n  ATT_STRING:   10,\n  ATT_UCHAR:    6,\n  ATT_ULONG:    8,\n  ATT_ULONG64:  9,\n  ATT_USHORT:   7,\n  DEVICE_STATE: 12,\n  NO_DATA:      14\n})\n\n\n/**\n * Attribute quality.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/AttrQuality.html\n */\nconst AttributeQuality = Enum({\n  ATTR_ALARM:    2,\n  ATTR_CHANGING: 3,\n  ATTR_INVALID:  1,\n  ATTR_VALID:    0,\n  ATTR_WARNING:  4\n})\n\n\n/**\n * Attribute write type.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/AttrWriteType.html\n */\nconst AttributeWriteType = Enum({\n  READ:             0,\n  READ_WITH_WRITE:  1,\n  READ_WRITE:       3,\n  WRITE:            2\n})\n\n\n/**\n * Device state.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/DevState.html\n */\nconst DeviceState = Enum({\n  ALARM:    11,\n  CLOSE:    2,\n  DISABLE:  12,\n  EXTRACT:  5,\n  FAULT:    8,\n  INIT:     9,\n  INSERT:   4,\n  MOVING:   6,\n  OFF:      1,\n  ON:       0,\n  OPEN:     3,\n  RUNNING:  10,\n  STANDBY:  7,\n  UNKNOWN:  13\n})\n\n\n/**\n * Display level.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/DispLevel.html\n */\nconst DisplayLevel = Enum({\n  EXPERT:   1,\n  OPERATOR: 0\n})\n\n\n/**\n * Error severity.\n * @see http://www.esrf.eu/computing/cs/tango/tango_doc/kernel_doc/tango_java_api/classes/fr/esrf/Tango/ErrSeverity.html\n */\nconst ErrorSeverity = Enum({\n  ERR:   1,\n  PANIC: 2,\n  WARN:  0\n})\n\n\n/**\n * Backend-specific connector implementation.\n * @private\n */\nlet connector = null\n\n/**\n * Sets connector interface implementation.\n * @param {Connector} conn connector implementation\n */\nfunction setConnector(conn) {\n  connector = conn\n}\n\nexport { AttributeInfo };\nexport { CommandInfo };\nexport { Connector };\nexport { Database };\nexport { DeviceAttribute };\nexport { DeviceCommand };\nexport { DeviceInfo };\nexport { DeviceProxy };\nexport { AttributeReadResponse };\nexport { CommandOutputResponse };\nexport { DeviceStatusResponse };\nexport { AttributeDataFormat };\nexport { AttributeDataType };\nexport { AttributeQuality };\nexport { AttributeWriteType };\nexport { DeviceState };\nexport { DisplayLevel };\nexport { ErrorSeverity };\nexport { InvalidDeviceNameException };\nexport { connector };\nexport { setConnector };"],"sourceRoot":"/source/"}