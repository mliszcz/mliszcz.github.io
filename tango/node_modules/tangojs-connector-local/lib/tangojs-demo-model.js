'use strict';

(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'tangojs'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('tangojs'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.tangojs);
    global.demoModel = mod.exports;
  }
})(this, function (exports, _tangojs) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createModel = undefined;

  var tangojs = _interopRequireWildcard(_tangojs);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  var createAttribute, createCommand, createDevice, createDeviceAttributeStruct, createTangoModel;

  createDeviceAttributeStruct = function (name, data_format, value) {
    return new tangojs.struct.DeviceAttribute({
      data_format: data_format,
      data_type: void 0,
      err_list: [],
      name: name,
      quality: tangojs.tango.AttrQuality.ATTR_VALID,
      r_dim: null,
      time: new tangojs.tango.TimeVal({
        tv_sec: parseInt(new Date().getTime() / 1000),
        tv_usec: 0,
        tv_nsec: 0
      }),
      value: value,
      w_dim: null
    });
  };

  createAttribute = function (initial, name, unit, data_format, format, level, writable, min_value, max_value, alarm) {
    var _value;

    _value = initial;
    return {
      get_info: function get_info() {
        return new tangojs.struct.AttributeInfo({
          att_alarm: alarm,
          data_format: data_format,
          data_type: void 0,
          description: name,
          display_unit: unit,
          enum_labels: [],
          event_prop: null,
          extensions: [],
          format: format,
          label: name,
          level: level,
          max_dim_x: void 0,
          max_dim_y: void 0,
          max_value: min_value,
          mem_init: false,
          memorized: false,
          min_value: max_value,
          name: name,
          root_attr_name: void 0,
          standard_unit: unit,
          writable: writable,
          writable_attr_name: void 0
        });
      },
      get_value: function get_value() {
        return createDeviceAttributeStruct(name, data_format, _value);
      },
      set_value: function set_value(v) {
        return _value = v;
      }
    };
  };

  createCommand = function (handler, name, level) {
    return {
      get_info: function get_info() {
        return new tangojs.struct.CommandInfo({
          cmd_name: name,
          cmd_tag: 0,
          in_type: void 0,
          in_type_desc: 'command input',
          level: level,
          out_type: void 0,
          out_type_desc: 'command output'
        });
      },
      inout: function inout(devData) {
        return new tangojs.struct.DeviceData(handler(devData.value));
      }
    };
  };

  createDevice = function (name) {
    var _name, _state;

    _name = name;
    _state = tangojs.tango.DevState.OFF;
    return {
      get_status: function get_status() {
        return 'ON';
      },
      get_state: function get_state() {
        return _state;
      },
      get_info: function get_info() {
        return new tangojs.struct.DeviceInfo({
          exported: true,
          ior: 'IOR:123456789',
          name: _name
        });
      },
      properties: {
        scalar: new tangojs.struct.DbDatum('scalar', 1),
        string: new tangojs.struct.DbDatum('string', 'test'),
        boolean: new tangojs.struct.DbDatum('boolean', true)
      },
      attributes: {
        scalar: createAttribute(0, 'scalar', 'u', tangojs.tango.AttrDataFormat.SCALAR, 'scientific,setprecision(3)', tangojs.tango.DispLevel.OPERATOR, tangojs.tango.AttrWriteType.READ_WRITE, '0', '100', new tangojs.tango.AttributeAlarm({
          max_warning: '50',
          max_alarm: '70'
        })),
        string: createAttribute(void 0, 'string', void 0, tangojs.tango.AttrDataFormat.SCALAR, void 0, tangojs.tango.DispLevel.OPERATOR, tangojs.tango.AttrWriteType.READ_WRITE, void 0, void 0, null),
        sine_trend: (function () {
          var attr, format;
          name = 'sine_trend';
          format = 'scientific,setprecision(3)';
          attr = createAttribute(0, name, 'u', tangojs.tango.AttrDataFormat.SCALAR, format, tangojs.tango.DispLevel.OPERATOR, tangojs.tango.AttrWriteType.READ, void 0, void 0, null);

          attr.get_value = function () {
            var value;
            value = Math.sin(new Date().getTime() / 1000.0);
            return createDeviceAttributeStruct(name, format, value);
          };

          return attr;
        })(),
        boolean: createAttribute(false, 'boolean', void 0, tangojs.tango.AttrDataFormat.SCALAR, void 0, tangojs.tango.DispLevel.OPERATOR, tangojs.tango.AttrWriteType.READ_WRITE, void 0, void 0, null),
        spectrum: createAttribute([1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function (_i) {
          return Math.random();
        }), 'spectrum', void 0, tangojs.tango.AttrDataFormat.SPECTRUM, void 0, tangojs.tango.DispLevel.OPERATOR, tangojs.tango.AttrWriteType.READ, void 0, void 0, null)
      },
      commands: {
        double_arg: createCommand(function (x) {
          return 2 * x;
        }, 'double', tangojs.tango.DispLevel.OPERATOR),
        to_upper: createCommand(function (x) {
          return x.toUpperCase();
        }, 'to_upper', tangojs.tango.DispLevel.OPERATOR),
        goto_on: createCommand(function () {
          return _state = tangojs.tango.DevState.ON;
        }, 'goto_on', tangojs.tango.DispLevel.OPERATOR),
        goto_off: createCommand(function () {
          return _state = tangojs.tango.DevState.OFF;
        }, 'goto_off', tangojs.tango.DispLevel.OPERATOR),
        goto_fault: createCommand(function () {
          return _state = tangojs.tango.DevState.FAULT;
        }, 'goto_fault', tangojs.tango.DispLevel.OPERATOR),
        goto_alarm: createCommand(function () {
          return _state = tangojs.tango.DevState.ALARM;
        }, 'goto_off', tangojs.tango.DispLevel.OPERATOR)
      }
    };
  };

  createTangoModel = function () {
    return {
      tangojs: {
        test: {
          dev1: createDevice('tangojs/test/dev1'),
          dev2: createDevice('tangojs/test/dev2')
        }
      },
      other: {
        test: {
          mock: createDevice('other/test/mock')
        }
      }
    };
  };

  var createModel = exports.createModel = createTangoModel;
});
//# sourceMappingURL=tangojs-demo-model.js.map
