{
  "_args": [
    [
      "tangojs-web-components@../../tangojs-web-components",
      "/home/michal4/Documents/tango/mliszcz.github.io/tango"
    ]
  ],
  "_from": "../../tangojs-web-components",
  "_id": "tangojs-web-components@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/tangojs-web-components",
  "_phantomChildren": {},
  "_requested": {
    "name": "tangojs-web-components",
    "raw": "tangojs-web-components@../../tangojs-web-components",
    "rawSpec": "../../tangojs-web-components",
    "scope": null,
    "spec": "/home/michal4/Documents/tango/tangojs-web-components",
    "type": "directory"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "file:../../tangojs-web-components",
  "_shasum": "5b587b6d2c97982033b379701d670b7790c640c6",
  "_shrinkwrap": null,
  "_spec": "tangojs-web-components@../../tangojs-web-components",
  "_where": "/home/michal4/Documents/tango/mliszcz.github.io/tango",
  "author": {
    "email": "liszcz.michal@gmail.com",
    "name": "mliszcz"
  },
  "bugs": {
    "url": "https://github.com/mliszcz/tangojs-web-compnents/issues"
  },
  "dependencies": {
    "tangojs": "/home/michal4/Documents/tango/tangojs",
    "tangojs-connector-local": "/home/michal4/Documents/tango/tangojs-connector-local"
  },
  "description": "Widgets collection for TangoJS.",
  "devDependencies": {
    "bower": "^1.6.0",
    "http-server": "^0.8.0"
  },
  "gitHead": "18c955e3a49cb3600211b3f0640447e0cfb4e6ef",
  "homepage": "https://github.com/mliszcz/tangojs-web-components#readme",
  "keywords": [
    "tango"
  ],
  "license": "MIT",
  "name": "tangojs-web-components",
  "optionalDependencies": {},
  "readme": "# tangojs-web-components\n\ntangojs-web-components is a collection of controls for\n[tangojs](https://github.com/mliszcz/tangojs). The controls are\ndesigned to work with any framework (or vanilla JS), and\noffer standard semantics of HTML*Element.\n\n## Installation\n\nIt's available in Bower registry, just get it:\n```\n$ bower install tangojs-web-components\n```\n\nand drop desired components onto your page:\n```html\n<link rel=\"import\"\n      href=\"bower_components/tangojs-web-components/src/components/label.html\">\n```\n\n### Configuration\n`tangojs-web-components` requires `tangojs` to be configured before any\ncomponents are created. Example:\n```html\n<!-- load scripts -->\n\n<script type=\"text/javascript\">\n  (function () {\n    var model = demoModel.createModel()\n    var conn = new tangojsConnectorLocal.LocalConnector(model)\n    tangojs.setConnector(conn)\n  })()\n</script>\n\n<!-- import components -->\n<!-- use components -->\n```\n\n### Requirements\n* Mozilla Firefox 44+  \n  Version 44 requires:\n  * enabling `dom.webcomponents.enabled`\n  * using\n    [HTMLImports polyfill](http://webcomponents.org/polyfills/html-imports/)\n  * applying [this patch](https://gist.github.com/d11ea630cc777012d69b.git)\n    just before the polyfill is loaded\n* ~~Chrome 49+~~ (*currently not supported*)\n\n## Components\n\nAll components are derived from\n[`HTMLElement`](https://developer.mozilla.org/en/docs/Web/API/HTMLElement).\nThe behavior and layout depends on information received from underlying\nmodel (e.g. `AttributeInfo` object).\n\n* [tangojs-label](#label)\n* [tangojs-line-edit](#lineedit)\n* [tangojs-command-button](#commandbutton)\n* [tangojs-state-led](#led)\n* [tangojs-plot](#plot)\n* [tangojs-trend](#trend)\n* [tangojs-form](#form)\n\n### Label\n\nDisplays value of an read-only attribute. The attribute is polled at\nconstant rate.\n\nExample:\n```html\n<tangojs-label\n  model=\"my/dev/01/attr01\"\n  poll-period=\"1000\"\n  show-name\n  show-unit>\n</tangojs-label>\n```\n\nProperty    | Type    | Attribute    | Remarks\n----------- | ------- | ------------ | -------\nmodel       | string  | model        | Full attribute name.\npollPeriod  | number  | poll-period  | Poll period in milliseconds.\nshowName    | boolean | show-name    | Should display name.\nshowUnit    | boolean | show-unit    | Should display unit.\nshowQuality | boolean | show-quality | Should display quality led.\n\n### LineEdit\n\nDisplays value of an writable attribute. The attribute is polled at\nconstant rate.\n\n*TODO: handle attribute types, e.g. input[type=number] for numbers,\ntoggle / radio-btn for booleans*\n\nExample:\n```html\n<tangojs-line-edit\n  model=\"my/dev/01/attr01\"\n  poll-period=\"1000\"\n  show-name\n  show-unit>\n</tangojs-line-edit>\n```\n\nProperty    | Type    | Attribute    | Remarks\n----------- | ------- | ------------ | -------\nmodel       | string  | model        | Full attribute name.\npollPeriod  | number  | poll-period  | Poll period in milliseconds.\nshowName    | boolean | show-name    | Should display name.\nshowUnit    | boolean | show-unit    | Should display unit.\nshowQuality | boolean | show-quality | Should display quality led.\n\n### CommandButton\n\nExecutes command on the device. Takes arbitrary HTML nodes as children.\n\nExample:\n```html\n<tangojs-command-button\n  model=\"my/dev/01/cmd01\"\n  parameters=\"6\">\n  Click Me!\n</tangojs-command-button>\n```\n\nProperty   | Type     | Attribute   | Remarks\n---------- | -------- | ----------- | -------\nmodel      | string   | model       | Full command name.\nparameters | object   | parameters  | Parameters passed to the command.\nonresult   | function | N/A         | Callback invoked on successful call.\n\n### Led\n\nDisplays device state.\n\nExample:\n```html\n<tangojs-state-led\n  model=\"my/dev/01\"\n  poll-period=\"1000\"\n  show-name\n  show-led>\n</tangojs-state-led>\n```\n\nProperty   | Type    | Attribute   | Remarks\n---------- | ------- | ----------- | -------\nmodel      | string  | model       | Full device name.\npollPeriod | number  | poll-period | Poll period in milliseconds.\nshowName   | boolean | show-name   | Should display name.\nshowLed    | boolean | show-led    | Should display led.\n\n### Plot\n\n*TODO*\n\n### Trend\n\nPlots multiple attributes over time.\nExample:\n```html\n<tangojs-trend\n  model='[\"tangojs/test/dev1/sine_trend\", \"tangojs/test/dev1/scalar\"]'\n  poll-period=\"1000\"\n  data-limit=\"5\">\n</tangojs-trend>\n```\n\nProperty   | Type     | Attribute   | Remarks\n---------- | -------- | ----------- | -------\nmodel      | string[] | model       | Array of attribute names.\npollPeriod | number   | poll-period | Poll period in milliseconds.\ndataLimit  | number   | data-limit  | Max no. of entries per dataset.\n\n**Note:** `tangojs-trend` widget is built\non top of [Chart.js](http://www.chartjs.org/). You have to include\ndependencies manually:\n\n```\n<script src=\"bower_components/moment/min/moment.min.js\"></script>\n<script src=\"bower_components/Chart.js/Chart.js\"></script>\n```\n\n### Form\n\n*TODO*\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/mliszcz/tangojs-web-compnents.git"
  },
  "scripts": {
    "server": "http-server"
  },
  "version": "0.1.0"
}
